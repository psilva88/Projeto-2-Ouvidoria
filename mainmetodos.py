from operacoesbd_english import *

def opcao1(conn):
        consultationListManifestations = "SELECT * FROM manifestation"
        manifestation = listDataBase(conn, consultationListManifestations)
        if len(manifestation) > 0:
            print("Aqui est√£o as manifesta√ß√µes cadastradas: \n")
            for manifest in manifestation:
                print(f"C√≥digo: {manifest[0]} - Tipo: {manifest[1]} - Manifesta√ß√£o: {manifest[2]}")
        else:
            print("Sem manifesta√ß√µes no sistema.")

def opcao2(conn):
        print("Filtrar manifesta√ß√µes por tipo:")
        print("1) üò° Reclama√ß√£o \n2) üí° Sugest√£o \n3) üåü Elogio")

        while True:
            tipo = input("Digite o n√∫mero correspondente ao tipo desejado: ")
            if tipo in ["1", "2", "3"]:
                typeManifestation = {"1": "Reclama√ß√£o", "2": "Sugest√£o", "3": "Elogio"}
                typeChoose = typeManifestation[tipo]
                break
            else:
                print("Op√ß√£o inv√°lida. Digite 1, 2 ou 3.")

        consulta = "SELECT * FROM manifestation WHERE tipo = %s"
        data = [typeChoose]
        manifestacoes_filtradas = listDataBase(conn, consulta, data)

        if len(manifestacoes_filtradas) > 0:
            print(f"Manifesta√ß√µes do tipo {typeChoose}:")
            for manifest in manifestacoes_filtradas:
                print(f"C√≥digo: {manifest[0]} - Manifesta√ß√£o: {manifest[2]}")
        else:
            print(f"Nenhuma manifesta√ß√£o do tipo {typeChoose} encontrada.")

def opcao3(conn):
        print("Antes de cadastrar sua manifesta√ß√£o, escolha o tipo:")
        print("1) üò° Reclama√ß√£o \n2) üí° Sugest√£o \n3) üåü Elogio")

        while True:
            tipo = input("Digite o n√∫mero correspondente ao tipo da manifesta√ß√£o: ")
            if tipo in ["1", "2", "3"]:
                typeManifestation = {"1": "Reclama√ß√£o", "2": "Sugest√£o", "3": "Elogio"}
                typeChoose = typeManifestation[tipo]
                break
            else:
                print("Op√ß√£o inv√°lida. Digite 1, 2 ou 3.")

        newManifestation = input("Por favor, digite a sua manifesta√ß√£o: ").strip()
        while len(newManifestation) < 1:
            newManifestation = input("Manifesta√ß√£o inv√°lida. Digite novamente: ").strip()

        insertConsultation = "INSERT INTO manifestation (tipo, manifestacao) VALUES (%s, %s)"
        data = [typeChoose, newManifestation]
        insertInDataBase(conn, insertConsultation, data)

        consultaID = "SELECT LAST_INSERT_ID()"
        position = listDataBase(conn, consultaID)[0][0]

        print(f"{typeChoose} cadastrada com sucesso! Seu c√≥digo √©: {position}")

def opcao4(conn):
        consultationListManifestations = 'SELECT COUNT(*) FROM manifestation'
        resultado = listDataBase(conn, consultationListManifestations)
        manifestationQuantity = resultado[0][0]

        if manifestationQuantity > 0:
            print(f"Temos {manifestationQuantity} manifesta√ß√µes cadastradas no sistema.")
        else:
            print("N√£o h√° manifesta√ß√µes cadastradas no sistema.")

def opcao5(conn):
        consultationListManifestations = "SELECT COUNT(*) FROM manifestation"
        resultado = listDataBase(conn, consultationListManifestations)
        quantidade = resultado[0][0]

        if quantidade == 0:
            print("N√£o h√° manifesta√ß√µes cadastradas no sistema.")
        else:
            while True:
                searchManifestation = int(input("Digite o c√≥digo da manifesta√ß√£o que deseja encontrar: "))
                data = [searchManifestation]
                consultationSearch = "SELECT * FROM manifestation WHERE codigo = %s"
                manifestation = listDataBase(conn, consultationSearch, data)

                if len(manifestation) == 0 or searchManifestation < 1:
                    print("Manifesta√ß√£o n√£o encontrada, tente novamente!")
                else:
                    print(f"Manifesta√ß√£o encontrada! \n{manifestation[0][1]}: {manifestation[0][2]}")
                    break

def opcao6(conn):
        consultationListManifestations = "SELECT COUNT(*) FROM manifestation"
        resultado = listDataBase(conn, consultationListManifestations)
        quantidade = resultado[0][0]

        if quantidade == 0:
            print("N√£o h√° manifesta√ß√µes cadastradas no sistema.")
        else:
            while True:
                deleteManifestation = int(input("Digite o c√≥digo da manifesta√ß√£o que deseja excluir: "))
                data = [deleteManifestation]
                consultationDelete = "SELECT * FROM manifestation WHERE codigo = %s"
                manifestation = listDataBase(conn, consultationDelete, data)
                
                if len(manifestation) == 0 or deleteManifestation < 1:
                    print("Manifesta√ß√£o n√£o encontrada, tente novamente!")
                else:
                    deleteConsultation = "DELETE FROM manifestation WHERE codigo = %s"
                    deleteDataBase(conn, deleteConsultation, data)
                    print(f"Manifesta√ß√£o com o c√≥digo {deleteManifestation} exclu√≠da com sucesso.")
                    break

def opcao7(seunome):
    print(f"üëã Obrigado por usar a ouvidoria, {seunome}!")
