'''
‚Ä¢üîçListagem de todas as manifesta√ß√µes registradas;

‚Ä¢üìÇListagem de manifesta√ß√µes filtradas por tipo (reclama√ß√£o, sugest√£o ou elogio);

‚Ä¢‚ûïCriar uma nova manifesta√ß√£o e armazen√°-la no sistema;

‚Ä¢üìäExibir a quantidade total de manifesta√ß√µes registradas;

‚Ä¢üîéPesquisar uma manifesta√ß√£o espec√≠fica atrav√©s do c√≥digo √∫nico;

‚Ä¢üóëÔ∏èExcluir uma manifesta√ß√£o pelo c√≥digo de identifica√ß√£o;

‚Ä¢üö™Sair do sistema de ouvidoria de forma segura.
'''
from operacoesbd_english_cirugia import *
conn = createConnection ('127.0.0.1', 'root', '99998888', 'ouvidoria_project')
option = -1
manifestation = listDataBase(conn, 'select * from manifestation')
 
print("Bem-vindo a ouvidoria da Universidade XYZ, na qual sua voz √© importante!")
seunome = input("Por favor, digite seu nome usu√°rio: ")
print(f"Ol√° {seunome}, o que voc√™ gostaria de fazer?")

while option != 7:
    option = int(input("\n Selecione uma das op√ß√µes abaixo: \n 1) üîç Listagem das Manifesta√ß√µes \n 2) üìÇ Listagem das manifesta√ß√µes filtradas por tipo \n 3) ‚ûï Criar uma nova manifesta√ß√£o \n 4) üìä Exibir a quantidade total de manifesta√ß√µes \n 5) üîé Pesquisar uma manifesta√ß√£o atrav√©s do c√≥digo \n 6) üóëÔ∏è  Excluir uma manifesta√ß√£o pelo c√≥digo \n 7) üö™ Sair do sistema \n" ))
    
    
    if option == 1:
        consultationListManifestations = "select * from manifestation"
        manifestation = listDataBase(conn, consultationListManifestations)
        if len(manifestation) > 0:
            print("Aqui est√° as manifesta√ß√µes cadastradas: \n")
            for manifest in range(len(manifestation)):
                print(f"C√≥digo da Manifesta√ß√£o: {manifestation[manifest][0]} - {manifestation[manifest][1]}.")
        else:
            print("Sem manifesta√ß√µes no sistema.")


    elif option == 2:
        print("Por favor digite o tipo da sua manifesta√ß√£o: \n 1) üò° Reclama√ß√£o \n 2) üí° Sugest√£o \n 3) üåü Elogio")
        


    elif option == 3:
        newManifestation = input("Por favor digite a sua manifesta√ß√£o: ")
        while True:
            if len(newManifestation) < 1:
                newManifestation = input("Manifesta√ß√£o inv√°lida. Por favor digite novamente uma manifesta√ß√£o v√°lida: ")
            elif len(newManifestation) > 1:
                break
        insertConsultation = "insert into manifestation (manifestacao) values (%s)"
        data = [newManifestation]
        insertInDataBase(conn, insertConsultation, data)
        cursor = conn.cursor()
        cursor.execute("SELECT LAST_INSERT_ID()")
        position = cursor.fetchone()[0]
        cursor.close()
        if len(newManifestation) > 0:
            print(f"Manifesta√ß√£o cadastrada com sucesso! Seu c√≥digo √©: {position}")
        

    elif option == 4:
        consultationListManifestations = 'select count(*) from manifestation'
        resultado = listDataBase(conn, consultationListManifestations)
        manifestationQuantity = resultado[0][0]

        if manifestationQuantity > 0:
            print(f"Temos {manifestationQuantity} manifesta√ß√µes cadastradas no sistema.")
        else:
            print("N√£o h√° manifesta√ß√µes cadastradas no sistema.")

    
    elif option == 5:
        consultationListManifestations = "select count(*) from manifestation"
        resultado = listDataBase(conn, consultationListManifestations)
        quantidade = resultado[0][0]

        if quantidade == 0:
            print("N√£o h√° manifesta√ß√µes cadastradas no sistema.")
        else:
            while True:
                searchManifestation = int(input("Digite o c√≥digo da manifesta√ß√£o que deseja encontrar: "))
                data = [ searchManifestation ]
                consultationSearch = "select * from manifestation where codigo = %s"
                manifestation = listDataBase(conn, consultationSearch, data)

                if len(manifestation) == 0 or searchManifestation < 1:
                    print("Manifesta√ß√£o n√£o encontrada, tente novamente!")
                else:
                    print(f"Manifesta√ß√£o encontrada: {manifestation[0][1]}")
                    break


    elif option == 6:
        while True:
            deleteManifestation = int(input("Digite o c√≥digo da manifesta√ß√£o que deseja excluir: "))
            data = [ deleteManifestation ]
            consultationDelete = "select * from manifestation where codigo = %s"
            manifestation = listDataBase(conn, consultationDelete, data)
            if len(manifestation) == 0 or deleteManifestation < 1:
                deleteManifestation = int(input("Manifesta√ß√£o n√£o encontrada, tente novamente: "))
            else:
                deleteConsultation = "delete from manifestation where codigo = %s"
                deleteDataBase(conn, deleteConsultation, data)
                print(f"Manifesta√ß√£o com o c√≥digo {deleteManifestation} exclu√≠da com sucesso.")
                break
    
    elif option == 7:
        print (f"Agradecemos pelo uso {seunome}. ")
    

    else:
        print("Op√ß√£o inv√°lida.")

endConnection(conn)
