'''
‚Ä¢üîçListagem de todas as manifesta√ß√µes registradas;

‚Ä¢üìÇListagem de manifesta√ß√µes filtradas por tipo (reclama√ß√£o, sugest√£o ou elogio);

‚Ä¢‚ûïCriar uma nova manifesta√ß√£o e armazen√°-la no sistema;

‚Ä¢üìäExibir a quantidade total de manifesta√ß√µes registradas;

‚Ä¢üîéPesquisar uma manifesta√ß√£o espec√≠fica atrav√©s do c√≥digo √∫nico;

‚Ä¢üóëÔ∏èExcluir uma manifesta√ß√£o pelo c√≥digo de identifica√ß√£o;

‚Ä¢üö™Sair do sistema de ouvidoria de forma segura.
'''
from operacoesbd_english import *
conn = createConnection('localhost', 'root', '@mysqlberna2006', 'ouvidoria_project')
option = -1
manifestation = listDataBase(conn, 'select * from manifestation')

print("Bem-vindo a ouvidoria da Universidade XYZ, na qual sua voz √© importante!")

while option != 6:
    option = int(input("\n Selecione uma das op√ß√µes abaixo: \n 1) Listagem das Manifesta√ß√µes \n 2) Criar uma nova Manifesta√ß√£o \n 3) Exibir quantidade de manifesta√ß√µes \n 4) Pesquisar uma manifesta√ß√£o por c√≥digo \n 5) Excluir uma manifesta√ß√£o por c√≥digo \n 6) Sair do Sistema\n"))
    
    if option == 1:
        consultationListManifestations = "select * from manifestation"
        manifestation = listDataBase(conn, consultationListManifestations)
        if len(manifestation) > 0:
            print("Aqui est√° as manifesta√ß√µes cadastradas: \n")
            for manifest in range(len(manifestation)):
                print(f"{manifest+1} - {manifestation[manifest][1]}")
        else:
            print("Sem manifesta√ß√µes no sistema.")
                

    elif option == 2:
        newManifestation = input("Por favor digite a sua manifesta√ß√£o: ")
        while True:
            if len(newManifestation) < 1:
                newManifestation = input("Manifesta√ß√£o inv√°lida. Por favor digite novamente uma manifesta√ß√£o v√°lida: ")
            elif len(newManifestation) > 1:
                break
        insertConsultation = "insert into manifestation (manifestacao) values (%s)"
        data = [newManifestation]
        insertInDataBase(conn, insertConsultation, data)
        cursor = conn.cursor()
        cursor.execute("SELECT LAST_INSERT_ID()")
        position = cursor.fetchone()[0]
        cursor.close()
        if len(newManifestation) > 0:
            print(f"Manifesta√ß√£o cadastrada com sucesso! Seu c√≥digo √©: {position}")
        

    elif option == 3:
        consultationListManifestations = 'select count(*) from manifestation'
        resultado = listDataBase(conn, consultationListManifestations)
        manifestationQuantity = resultado[0][0]

        if manifestationQuantity > 0:
            print(f"Temos {manifestationQuantity} manifesta√ß√µes cadastradas no sistema.")
        else:
            print("N√£o h√° manifesta√ß√µes cadastradas no sistema.")

    
    elif option == 4:
        while True:
            searchManifestation = input("Digite o c√≥digo da manifesta√ß√£o que deseja encontrar: ")
            data = [ searchManifestation ]
            consultationSearch = "select * from manifestation where codigo = %s"
            manifestation = listDataBase(conn, consultationSearch, data)
            if len(manifestation) == 0:
                print("Manifesta√ß√£o n√£o encontrada, tente novamente!")
            else:
                print(f"Manifesta√ß√£o encontrada: -{manifestation [0][1]}")
                break

    elif option == 5:
        manifestationCode = int(input("Digite o c√≥digo da manifesta√ß√£o a remover: "))
        while True:
            if manifestationCode < 1:
                manifestationCode = int(input("Manifesta√ß√£o inv√°lida. Por favor digite novamente uma manifesta√ß√£o v√°lida: "))
            elif manifestationCode > 1:
                break
        removeConsultation = "delete from manifestation where codigo = %s"
        dados = [ manifestationCode ]

        changedLines = deleteDataBase(conn,removeConsultation,dados)
        if changedLines == 0:
                    print("N√£o existe manifesta√ß√£o para o c√≥digo informado, tente novamente: ")
        else:
            print("Manifesta√ß√£o removida com sucesso!")
        
    elif option == 6:
        print ("Agradecemos pelo uso.")
    

    else:
        print("Op√ß√£o inv√°lida.")

endConnection(conn)
